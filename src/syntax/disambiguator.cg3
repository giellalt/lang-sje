# Distributed under the terms of the GNU General Public License version 2 
# or any later version.

# =================================================================== #
# =================================================================== #
#             P I T E  S Á M I   D I S A M B I G U A T O R            #
# =================================================================== #
# =================================================================== #

# copied from South Saami disambiguator by Joshua Wilbur on 2018-01-09

            # =========================================== #
            #            Short table of contents          #
            # =========================================== #

            # Delimiters
            # Tags and sets
	        # Mapping rules
            # Disambiguation rules
              # One-cohort disambiguation - cycle 0
              # Local disambiguation - cycles 1 and 2
              # Cycle 2: Other local disambiguation         
              # Cycle 3: Global disambiguation 
	          # Cycle 4: Syntactic disambiguation 
	          # Cycle 5: Post-syntactic morphological disambiguation




# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" sent SENT ;


# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>) (sent) ; 
LIST EOS = (<<<) (</s>) (sent) ; # vislcg and CG-2 together.

# Tags declared as single-membered LISTs 
# ======================================


# Parts of speech
# ---------------


	
LIST SENT = SENT ;
LIST N = N ; 
LIST A = A ; 
LIST Adv = Adv ; 
LIST V = V ; 
LIST Pron = Pron ;
LIST CS = CS ; 
LIST CC = CC ; 
LIST Po = Po ; 
LIST Pr = Pr ;
LIST Pcle = Pcle ; 
LIST Qst = Qst ; 
LIST Num = Num ; 
LIST Prop = Prop ;
LIST Interj = Interj ;

# POS sub-categories
# ------------------

LIST Pers = Pers ; 
LIST Dem = Dem ; 
LIST Interr = Interr ;
LIST Indef = Indef ;
LIST Recipr = Recipr ; 
LIST Refl = Refl ; 
LIST Rel = Rel ;
LIST Interj = Interj ; 
LIST Adp = Adp ;
LIST ABBR = ABBR ;


# Morphosyntactic properties
# --------------------------

LIST Sg = Sg ; 
LIST Pl = Pl ;

LIST Nom = Nom ; 
LIST Gen = Gen ; 
LIST Acc = Acc ;
LIST Ill = Ill ; 
LIST Ine = Ine ; 
LIST Ela = Ela ;
LIST Com = Com ; 
LIST Ess = Ess ; 
LIST Par = Par ; 
LIST Abe = Abe ;


LIST Comp = Comp ; 
LIST Superl = Superl ; 
LIST NomAg = NomAg ;

LIST Actio = Actio ; 
LIST Clt = Clt ; 
LIST Foc = Foc ;
LIST Attr = Attr ;
LIST Card = Card ; 
LIST Ord = Ord ;
LIST Date = Date ; 
LIST Range = Range ;
LIST Dim = Dim ; 
LIST Inch = Inch ; 

LIST Prs = Prs ; 
LIST Prt = Prt ;
LIST Ind = Ind ; 
LIST Pot = Pot ; 
LIST Cond = Cond ;
LIST Imprt = Imprt ; 
LIST Sup = Sup ;
LIST IV = IV ; 
LIST TV = TV ;

LIST Sg1 = Sg1 ; 
LIST Sg2 = Sg2 ; 
LIST Sg3 = Sg3 ;
LIST Du1 = Du1 ; 
LIST Du2 = Du2 ; 
LIST Du3 = Du3 ;
LIST Pl1 = Pl1 ; 
LIST Pl2 = Pl2 ; 
LIST Pl3 = Pl3 ;

LIST Inf = Inf ; 
LIST GerI = GerI ; 
LIST GerII = GerII ;
LIST ConNeg = ConNeg ; 
LIST Neg = Neg ;
LIST PrsPrc = PrsPrc ; 
LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ; 
LIST VAbess = VAbess ;
LIST Arab = Arab ;

LIST CLB = CLB ; 
LIST PUNCT = PUNCT ;
LIST LEFT = LEFT ; 
LIST RIGHT = RIGHT ;
LIST HYPH = HYPH ; 
LIST PAR = PAR ;

LIST ITRAB = ITRAB ;
LIST TRAB = TRAB ;
LIST TRNUMAB = TRNUMAB ;

# Syntactic tags
# -----------------

LIST @SUBJ> = @SUBJ> ; 
LIST @<SUBJ = @<SUBJ ;
LIST @SPRED> = @SPRED> ;
LIST @<SPRED = @<SPRED ;
LIST @>N = @>N ;


# Punctuation
# ----------------
 
LIST COMMA = "," ;
LIST CITATION = """ ; #"
LIST HYPHEN = "-" ;
LIST ¶ = ¶;

LIST NumChar = "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" ;

SET SINGULAR = Sg1 OR Sg2 OR Sg3 ;

##from north saami
#LIST REAL-COPULAS = "dáidit" "leat" "soaitit" "veadjit" "liehket" "lea";
##!! * The set COPULAS is for predicative constructions
LIST COPULAS = "sjaddat" "lä" "gallgat";


SET V-MOOD = Ind OR Pot OR Imprt OR Cond ;

SET VFIN = V-MOOD ;


SET NOT-COP-V = V - COPULAS ;

LIST MOD-ASP = "áigut" "bállet" "berret" "dáidit" "fertet" "galgat" "gillet" "lávet" "sáhttit" "seahtit" "soaitit" "viggat" ;

LIST AUX-OR-MAIN = "áigut" "álgit" "beassat" "galgat" "háliidit" "máhttit" "ollit" "orrut" "sihtat" "veadjit"; #"nagodit"  "nagadit" "

SET AUX = COPULAS OR Neg OR MOD-ASP OR AUX-OR-MAIN ;

SET VFIN-NOT-AUX = VFIN - AUX ;



#SET AdjP = A OR 


# any word
LIST WORD = N A Adv V Pron CS CC Po Pr Interj Pcle Num \? ;

LIST NP-HEAD = N Pron ; #set of NP heads

SET PRE-NP-HEAD = (Prop @>N) OR (A Attr) OR (ABBR Attr) OR (Pron Pers Gen) OR (N Gen) OR 
         Num OR CC OR (Pron Dem) OR (Pron Refl Gen) OR (Pron Indef) OR 
         (PrfPrc @>N) OR PrsPrc OR (A Ord) ;
SET NPNH = WORD - PRE-NP-HEAD OR ABBR ; #NPNotpreHead (used as barrier)

SET NoNP = WORD - NP-HEAD - PRE-NP-HEAD ; #NoNP = not possibly anywhere in NP, pluc CC

# ============== #
# Disambiguation #
# ============== #


              # One-cohort disambiguation - cycle 0
              # Local disambiguation - cycles 1 and 2
              # Cycle 2: Other local disambiguation         
              # Cycle 3: Global disambiguation 

# Sentence border

REMOVE:trab SENT IF (-1 TRAB) ;


#examples from N-Saami:
SET S-BOUNDARY  = (Pron Interr) OR (Pron Rel) OR ("men") OR ("dä" CC) OR ("\;") OR (":") OR ("-") OR ("–") OR CS ;
#LIST MO-MANge = "goas" "gokko" "gos" "gosa" "govt" ("got" Adv) ("guđe ládje" Adv) "makkár" "man" ("man ládje" Adv) "manne" "mo" "mot" "mov" "movt" ("nugo" @CVP) (V Qst);
#SET MO = MO-MANge - ("man" Foc/ge) ;


#!! !Negation rules

#!! * __ConNeg3__ conneg form when neg-verb to the left
SELECT:ConNeg3 ConNeg IF (*-1 Neg BARRIER V) ;
REMOVE:ConNeg4 ConNeg IF (NOT *-1 Neg BARRIER S-BOUNDARY OR COMMA ) ;
	## Beispiel (am besten ein langes Beispiel)
	#$ Gegenbeispiel
SELECT:ConNeg1 ConNeg IF (-1 Neg) ;
SELECT:ConNeg2 ConNeg IF (-2 Neg) ;



#!! !Agreement rules for subject NP
SELECT:Pl1Nom Pl1 + Nom IF (0 Pron)( 1  V + Pl1);
SELECT:Pl1Nom Pl1 + Nom IF (0 Pron)(-1C V + Pl1);

#!! !choose relative pronoun when preceded by NP and not ending in Q-mark
SELECT:RelProAfterNP Rel IF (-1 NP-HEAD)(NOT *1 ("\?"));
#but what about this: mån gatjádav duvste mij lä dat (I ask you what is that)

#!! !choose iterrogative pronoun when ending in Q-mark and NOT preceded by NP 
SELECT:InterrogProNoPreNP Interr IF (NOT -1 NP-HEAD)(*1 ("\?"));

#!! !rule out imperative forms in questions
REMOVE:noImperativeQs Imprt IF (*1 ("\?"));

#!! !rule out finite verbforms after infinitive verbform
REMOVE:noFiniteVafterINF VFIN IF (*-1 Inf BARRIER CLB);

	          # Cycle 4: Syntactic disambiguation 
	          # Cycle 5: Post-syntactic morphological disambiguation


#-1C = careful mode

REMOVE:PoAdv Po IF (NOT -1 Gen)(0 Adv) ;	
REMOVE:AdvPo Adv IF (-1 Gen)(0 Po) ;

#REMOVE, SELECT, MAP, IFF

# ----- #
#disambiguate gen.sg vs nom.pl
# ----- #
	##Gu lij Stállo akt SÁME påjkåv válldám.
	##idtjij vil biesa STÁLO luhte.
	##ja dä sån lijjkij dav STÁLO tjalme nala.
	##ja dä sån lijjkij dav STÁLO tjilmij nala.
	#also pronouns:
	##båtsoj máhtta DUV nala båhtet

#NP (incl. pronouns) preceding certain Po is Gen # actually more general than just gen.sg/nom.pl
SELECT:genb4Po Gen IF (*1C Po BARRIER NoNP);

#if the following slot has a noun, choose gen.sg
SELECT:GenSgB4NP (N Sg Gen) IF (1 N) ; 	# (NOT 1 (N Nom)) ;
REMOVE:GenSgB4EOS (N Sg Gen) IF (1 EOS OR ("\;"));

#remove GenSg if no noun immediately follows
REMOVE:GenSgWOfollowingN (N Sg Gen) IF (NOT 1 N);

#reject demonstrative pronoun reading if DET followed by NP-head
REMOVE:DemPronWO-NPhead Pron IF (*1C N BARRIER NPNH);
#select demonstrative pronoun reading if NOT directly followed by possible NP-material
SELECT:DemPronWithNPhead Pron IF (NOT 1C NPNH OR N);

#rules for choosing correct Determiner case/number based on case/number of NP-Head:
SELECT:InessSgDetB4InessSgNH (Det Sg Ine) IF (*1 (N Sg Ine) BARRIER NoNP);
SELECT:IllSgDetB4IllSgNH (Det Sg Ill) IF (*1 (N Sg Ill) BARRIER NoNP);
#this GenSg rule must go last of these otherwise a Gen-NP-complement will trump the previous rules
SELECT:GenSgDetB4GenSgNH (Det Sg Gen) IF (*1 (N Sg Gen) BARRIER NoNP);


#add subj tags to NPs
#MAP (@SUBJ>) TARGET (N Nom) OR (Pron Nom) (*0 VFIN);
#MAP (@SUBJ> @<SUBJ @SPRED> @<SPRED) TARGET (N Nom Sg) OR (Pron Nom) (*0 VFIN);

#subject in Sg(3) triggers 3sg on finite V after
SELECT:3SGafterNomSg (V Sg3) IF (*-1 Sg OR Sg3 BARRIER S-BOUNDARY OR CC);
	##båtsoj älgij	#not a very useful example
#subject in Sg(3) triggers 3sg on finite V before
#SELECT:3SGbeforeNomSg (V Sg3) IF (*1 Sg + @SUBJ> OR Sg3 + @SUBJ> BARRIER S-BOUNDARY OR CC OR (V PrfPrc));
	##Dav mujjtulasav lä MUV GÅSSKE mujjtalam sån lij ietj dav vuajdnám ja gullam.
#select Nom Sg reading if followed by a Fin-V in 3sg
SELECT:NomSG-B4-FinVSg (N Sg Nom) IF (*1 (V Sg3) BARRIER S-BOUNDARY OR CC);


#for proper nouns – need to implement this first for proper nouns (cf. sje-propernouns.lexc)
#SELECT Prop IF (0 LINK *-1 WORD) ;
#REMOVE Prop IF (0 LINK *-1 BOS BARRIER WORD) ;

#prefer relative pronoun when preceded by NP
SELECT:relProAfterNP (Pron Rel) IF (-1 N);
#SELECT:interrProStartQ (Pron Interr) IF (-1 S-BOUNDARY);# LINK *1 ("\?"));


#remove ambiguity for singular personal pronouns in acc and gen when N in Acc follows (the pronoun can't be Acc, but only Gen)
REMOVE:accPersPronb4accNP (Pron Pers Acc) + SINGULAR IF (*1C (N Acc) BARRIER CLB);
	##Dä dån ådtjo MUV TJILMIJD lägit.

#choose attr when followed by (adj)(adv+adj)N, otherwise remove it
SELECT:attrB4N (A Attr) IF (1 N OR (Attr N));
REMOVE:attrNoNP (A Attr) IF (NOT 1 N OR (Attr N));

#!! !Agreement rules for verb triggered by PersPron
SELECT:Sg2afterSg2	Sg2 IF (0 V)(-1 Pers + Nom + Sg2);
SELECT:Sg2b4Sg2		Sg2 IF (0 V)( 1 Pers + Nom + Sg2);
SELECT:Sg3afterSg3	Sg3 IF (0 V)(-1 Pers + Nom + Sg3);
SELECT:Sg3b4Sg3		Sg3 IF (0 V)( 1 Pers + Nom + Sg3);
SELECT:Du1afterDu1	Du1 IF (0 V)(-1 Pers + Nom + Du1);
SELECT:Du1b4Du1		Du1 IF (0 V)( 1 Pers + Nom + Du1);
SELECT:Pl3afterPl3	Pl3 IF (0 V)(-1 Pers + Nom + Pl3);
SELECT:Pl3b4Pl3		Pl3 IF (0 V)( 1 Pers + Nom + Pl3);
#!! !Agreement rules for verb triggered by full NP
SELECT:Pl3afterNomPl Pl3 IF (0 V)(*-1C N + Pl + Nom BARRIER CLB);
SELECT:Sg3afterNomSg Sg3 IF (0 V)(*-1C N + Sg + Nom BARRIER CLB);





#!! !!!Mapping rules

#!! !!Mapping CC


#!! * __CCasCNPCVP__ Map (@CNP @CVP) to CC
MAP:CCasCNPCVP (@CNP @CVP) TARGET CC ;

# remove coordinating NP tag if not followed by an NP
REMOVE:CNPnoNP (@CNP) IF (NOT *1 NP-HEAD BARRIER VFIN OR Inf OR S-BOUNDARY OR CC) ;

# remove coordinating NP tag for men (until evidence to the contrary is found)
REMOVE:CNP4men (@CNP) IF (0 ("men")) ;


#!! !!Mapping verbs
#!! * __+FMAINVinfv__ maps to main verb followed by inf
#FiniteMAINVerb
MAP:+FMAINVinfv (@+FMAINV) TARGET VFIN-NOT-AUX ;
	#$ Liná liikui sárgut ja tennjet.

#tag A Attr as N modifier
MAP (@>N) TARGET (A Attr) IF (*1 N BARRIER NPNH);



# remove ordinal number marking function of full-stop when not preceded by a ordinal numeral
REMOVE:A-OrdB4nonNumeralCharacter (A Ord) IF (NOT -1 NumChar);
    ## 4. båtsoj

#!! !!Add language code

#SUBSTITUTE (A) (A <sje>) WORD ; 
#SUBSTITUTE (N) (N <sje>) WORD ; 
#SUBSTITUTE (Adv) (Adv <sje>) WORD ; 
#SUBSTITUTE (V) (V <sje>) WORD ; 
#SUBSTITUTE (Num) (Num <sje>) WORD ; 
#SUBSTITUTE (Interj) (Interj <sje>) WORD ; 
#SUBSTITUTE (Po) (Po <sje>) WORD ; 
#SUBSTITUTE (Pr) (Pr <sje>) WORD ; 
#SUBSTITUTE (Pron) (Pron <sje>) WORD ; 
#SUBSTITUTE (CC) (CC <sje>) WORD ; 
#SUBSTITUTE (CS) (CS <sje>) WORD ; 
#SUBSTITUTE (Pcle) (Pcle <sje>) WORD ; 




##### NOTES, things to work on:
## 1. ambiguity between Iness.Pl and Com.Sg, e.g.:
##		##mån lev vuajjdam iehtjan tjilmijd duoldaja DIRVIJN.)
##		--> classify lexical verbs as typically expecting locatives and/or instrumental/commitatives






