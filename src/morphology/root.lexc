! Divvun & Giellatekno - open source grammars for Pite Sámi.
! Copyright © 2000-2015 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

! ========================================================================== !
!!               !!!Pite Sámi morphological analyser
! ========================================================================== !

!! This file contains the tags and reference to main lexica

Multichar_Symbols  !!≈ !!!@CODE@ definitions

!! POS
+N +V +A
+Adv +CC +CS
+Interj
+Pron +Num

! Verbal MSP
+Prs +Fut +Prt +Prf
+Ind +Imprt +Cond +Opt +Pot
+Sg1 +Sg2 +Sg3
+Du1 +Du2 +Du3
+Pl1 +Pl2 +Pl3
+Inf
+Pos +Neg +ConNeg
+GerI +GerII +PrfPrc
+VAbess +Sup +VAdv
+Cmp

!! Nominal MSP
+Sg +Pl

!! Case

+Nom +Acc +Gen
+Ill +Ine +Ela
+Com +Ess +Abe
+Ord +Card
+Qst

!! Semantic properties of names

+Prop +Sem/Ani
+Sem/Mal +Sem/Fem +Sem/Sur
+Sem/Plc +Sem/Org +Sem/Obj


+PxSg1 +PxSg2 +PxSg3
+PxPl1 +PxPl2 +PxPl3


+Err/Orth ! Not part of standard
+Use/NG  ! Part of standard, but not generated
+Use/Circ
+Cmp/Hyph
+Cmp/SplitR
+Use/-Spell
 +Use/-PLX        !!≈ * @CODE@  Excluded in PLX speller

! This part of the component can ..
+CmpNP/All       !!≈ * @CODE@ - ... be in all positions, __default__, this tag does not have to be written
+CmpNP/First     !!≈ * @CODE@ - ... can only be first part in a compound or alone
+CmpNP/Pref      !!≈ * @CODE@ - ... only __first__ part in a compound, NEVER alone
+CmpNP/Last      !!≈ * @CODE@ - ... can only be last part in a compound or alone
+CmpNP/Suff      !!≈ * @CODE@ - ... only __last__ part in a compound, NEVER alone
+CmpNP/None      !!≈ * @CODE@ - ... can not take part in compounds
+CmpNP/Only      !!≈ * @CODE@ - ... can only be part of a compound, i.e. can never
                !!                 be used alone, but can appear in any position

+CLB +PUNCT +PAR +LEFT +RIGHT

^WG    !!= @CODE@ * weak grade
^jDEL  !!= @CODE@ * vowel deletion in front of j
^ILLE2AA !!= @CODE@ * e to á (before j), o to u before j
^CDEL   !!= @CODE@ * Deleting final consonant, biednag
^MON    !!= @CODE@ * Monophthong in contract
^LOW    !!= @CODE@ * Lowering u to å and o (ålol)
^UAUML  !!= @CODE@ * uo to uä juolge / juällge
^IEUML  !!= @CODE@ * ie to ä etc. gielbar gællbara
^IUML   !!= @CODE@ * a to i, gallgat gillgin
^IJ     !!= @CODE@ * e to i in front of Plural j and Sg Com
^ILLO2U !!= @CODE@ * o to u in V2 in Ill.Sg, Dim, etc. (normative variant)
^VHBAR  !!= @CODE@ * block VH from happening


d2 t2 j2 h2 g2 !!= @CODE@ * Variable consonants, undergo Auslautherdung
               ! NB! This is the opposite of the sme pattern
^O      !!= @CODE@ * o but ä in uä

!! {{{
! Symbols that need to be escaped on the lower side (towards twolc):
 »7     !!= @CODE@ * »
 «7     !!= @CODE@ * «
 %[%>%] !!= @CODE@ * >
 %[%<%] !!= @CODE@ * <
!! }}}

!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.


! Key lexicon

LEXICON Root

+Use/-Spell: Abbreviation ;
 Adjective ;
 Adverb ;
 Conjunction ;
 Interjection ;
 Noun ;
 Numeral ;
 Particle ;
 Postposition ;
 Pronoun ;
 ProperNoun ;
 Punctuation ;
 Subjunction ;
 Verb ;

LEXICON ENDLEX
!! !!!Lexicon @LEXNAME@
!! And this is the @LEXNAME@ of everything:
!! {{{
   @D.CmpOnly.FALSE@@D.CmpPref.TRUE@@D.NeedNoun.ON@ # ; !!≈ @CODE@
!! }}}
!! The {{@D.CmpOnly.FALSE@}} flag diacritic is ued to disallow words tagged
!! with +CmpNP/Only to end here.
!! The {{@D.NeedNoun.ON@}} flag diacritic is used to block illegal compounds.
